;; Object gh/gh-gist-api/bion
;; EIEIO PERSISTENT OBJECT
(gh-cache "gh/gh-gist-api/bion"
  :file "bion"
  :object-name "gh/gh-gist-api/bion"
  :version "27.0.50/0.4/gh-4"
  :entries #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (("/users/bion/gists" "GET" "55b421b9875ed128f478d78ded303a5db18d3a30") #s(#s(eieio--class gh-cache-entry nil (#s(eieio--class pcache-entry nil nil [#s(cl-slot-descriptor timestamp (float-time (current-time)) t nil) #s(cl-slot-descriptor ttl nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor value-cls nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (timestamp 0 ttl 1 value 2 value-cls 3)) (gh-cache-entry) ((:timestamp . timestamp) (:ttl . ttl) (:value . value) (:value-cls . value-cls)) [] [] #s(#4 1517616917.58392 nil nil nil) (:custom-groups nil))) [#s(cl-slot-descriptor timestamp (float-time (current-time)) t nil) #s(cl-slot-descriptor ttl nil t nil) #s(cl-slot-descriptor value nil t nil) #s(cl-slot-descriptor value-cls nil t nil) #s(cl-slot-descriptor etag nil t nil) #s(cl-slot-descriptor outdated nil t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (timestamp 0 ttl 1 value 2 value-cls 3 etag 4 outdated 5)) nil ((:timestamp . timestamp) (:ttl . ttl) (:value . value) (:value-cls . value-cls) (:etag . etag) (:outdated . outdated)) [] [] #s(#2 1517616917.5869 nil nil nil nil nil) (:custom-groups nil)) 1517617527.397954 nil (#s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "971e4cc8ac95e4d777caa40813c8e2fa" "https://api.github.com/gists/971e4cc8ac95e4d777caa40813c8e2fa" "https://gist.github.com/971e4cc8ac95e4d777caa40813c8e2fa" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "kase_with_beneficiary_address_in_country.rb" 111 "https://gist.githubusercontent.com/bion/971e4cc8ac95e4d777caa40813c8e2fa/raw/d6ba872d59072784627442e98e6e7d33ae71f15e/kase_with_beneficiary_address_in_country.rb" nil) #s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "size_of_pg_db.sql" 117 "https://gist.githubusercontent.com/bion/971e4cc8ac95e4d777caa40813c8e2fa/raw/8352c42547459755c55988edc337ae0702075757/size_of_pg_db.sql" nil) #s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "useful_stuff" 407 "https://gist.githubusercontent.com/bion/971e4cc8ac95e4d777caa40813c8e2fa/raw/e540c9e8ac71844d9c70231e4893f1602d8ef3b9/useful_stuff" nil)) nil "useful stuff" "2018-02-03T00:17:21Z" "2018-02-03T00:24:24Z" "https://gist.github.com/971e4cc8ac95e4d777caa40813c8e2fa.git" "https://gist.github.com/971e4cc8ac95e4d777caa40813c8e2fa.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "9c95dbc02f76d46b7023ec02a574e6f2" "https://api.github.com/gists/9c95dbc02f76d46b7023ec02a574e6f2" "https://gist.github.com/9c95dbc02f76d46b7023ec02a574e6f2" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "kase_157893_application_data.json" 18687 "https://gist.githubusercontent.com/bion/9c95dbc02f76d46b7023ec02a574e6f2/raw/d9805037079d8a9642230b70705120a17c002e48/kase_157893_application_data.json" nil)) nil "" "2018-01-09T21:44:36Z" "2018-01-09T21:44:37Z" "https://gist.github.com/9c95dbc02f76d46b7023ec02a574e6f2.git" "https://gist.github.com/9c95dbc02f76d46b7023ec02a574e6f2.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "f0a60d84b6b55633db6ee0fef6bbedab" "https://api.github.com/gists/f0a60d84b6b55633db6ee0fef6bbedab" "https://gist.github.com/f0a60d84b6b55633db6ee0fef6bbedab" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "check_status.rb" 641 "https://gist.githubusercontent.com/bion/f0a60d84b6b55633db6ee0fef6bbedab/raw/9f3515f941923bcca92267c4ab85d90bcc362a21/check_status.rb" nil)) nil "check uscis status" "2017-12-05T01:13:08Z" "2017-12-05T01:13:08Z" "https://gist.github.com/f0a60d84b6b55633db6ee0fef6bbedab.git" "https://gist.github.com/f0a60d84b6b55633db6ee0fef6bbedab.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "dc50cbc856a4540474d2d6bf1e0d505a" "https://api.github.com/gists/dc50cbc856a4540474d2d6bf1e0d505a" "https://gist.github.com/dc50cbc856a4540474d2d6bf1e0d505a" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "domain_model_notes.txt" 3444 "https://gist.githubusercontent.com/bion/dc50cbc856a4540474d2d6bf1e0d505a/raw/2a699716d5a1ce4fc72be6c4b2271c200eaaacdd/domain_model_notes.txt" nil)) nil "domain model notes" "2017-12-01T00:03:49Z" "2017-12-01T00:14:31Z" "https://gist.github.com/dc50cbc856a4540474d2d6bf1e0d505a.git" "https://gist.github.com/dc50cbc856a4540474d2d6bf1e0d505a.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "21d2d492b0e04d7873be43e7c0d21e2e" "https://api.github.com/gists/21d2d492b0e04d7873be43e7c0d21e2e" "https://gist.github.com/21d2d492b0e04d7873be43e7c0d21e2e" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "questions.txt" 42009 "https://gist.githubusercontent.com/bion/21d2d492b0e04d7873be43e7c0d21e2e/raw/b28b3832e2a8f839ad14e199163f3335bfa1f521/questions.txt" nil)) nil "questions" "2017-10-31T23:59:16Z" "2017-10-31T23:59:17Z" "https://gist.github.com/21d2d492b0e04d7873be43e7c0d21e2e.git" "https://gist.github.com/21d2d492b0e04d7873be43e7c0d21e2e.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "1362ac51163428ab8fa6c6ccfedd7d66" "https://api.github.com/gists/1362ac51163428ab8fa6c6ccfedd7d66" "https://gist.github.com/1362ac51163428ab8fa6c6ccfedd7d66" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "id_rsa.pub" 745 "https://gist.githubusercontent.com/bion/1362ac51163428ab8fa6c6ccfedd7d66/raw/6db4cb9aeb74d9644d3ae86d5abb3914e2cb45fe/id_rsa.pub" nil)) t "bion's substantial RSA public key" "2017-10-09T17:23:31Z" "2017-10-09T17:23:31Z" "https://gist.github.com/1362ac51163428ab8fa6c6ccfedd7d66.git" "https://gist.github.com/1362ac51163428ab8fa6c6ccfedd7d66.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "6cfbdf5d825a09e832ef9d43475a6ece" "https://api.github.com/gists/6cfbdf5d825a09e832ef9d43475a6ece" "https://gist.github.com/6cfbdf5d825a09e832ef9d43475a6ece" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "backloop.scd" 2266 "https://gist.githubusercontent.com/bion/6cfbdf5d825a09e832ef9d43475a6ece/raw/08bcda61f11224d069c1b929dfe37132e8267a9c/backloop.scd" nil)) nil "" "2017-09-23T04:03:48Z" "2017-09-23T04:03:48Z" "https://gist.github.com/6cfbdf5d825a09e832ef9d43475a6ece.git" "https://gist.github.com/6cfbdf5d825a09e832ef9d43475a6ece.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "6e2974396c8610f28d0cfefcdd6ed74a" "https://api.github.com/gists/6e2974396c8610f28d0cfefcdd6ed74a" "https://gist.github.com/6e2974396c8610f28d0cfefcdd6ed74a" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "error" 3109 "https://gist.githubusercontent.com/bion/6e2974396c8610f28d0cfefcdd6ed74a/raw/2479f014b71f705ee1ba111e3c377f825826e276/error" nil)) nil "RichTextBox editing bug" "2017-09-18T22:58:33Z" "2017-09-18T22:58:33Z" "https://gist.github.com/6e2974396c8610f28d0cfefcdd6ed74a.git" "https://gist.github.com/6e2974396c8610f28d0cfefcdd6ed74a.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "f97a50890136ea6c9500ba7b1d28384e" "https://api.github.com/gists/f97a50890136ea6c9500ba7b1d28384e" "https://gist.github.com/f97a50890136ea6c9500ba7b1d28384e" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "download-passwords" 83 "https://gist.githubusercontent.com/bion/f97a50890136ea6c9500ba7b1d28384e/raw/e1f13eccb6c00c4e7b6566c154f13765e1f94029/download-passwords" nil) #s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "password_game.rb" 877 "https://gist.githubusercontent.com/bion/f97a50890136ea6c9500ba7b1d28384e/raw/113f82636db4aab80a3e7933f317b1e099a001ef/password_game.rb" nil)) t "password game" "2017-09-06T08:11:39Z" "2017-09-06T19:33:26Z" "https://gist.github.com/f97a50890136ea6c9500ba7b1d28384e.git" "https://gist.github.com/f97a50890136ea6c9500ba7b1d28384e.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "2de5fad5de9633bbd293679bf128d764" "https://api.github.com/gists/2de5fad5de9633bbd293679bf128d764" "https://gist.github.com/2de5fad5de9633bbd293679bf128d764" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "gistfile1.txt" 4033 "https://gist.githubusercontent.com/bion/2de5fad5de9633bbd293679bf128d764/raw/57c0246d1d60f2b97148de6cf99e1cf1af62f1e5/gistfile1.txt" nil)) t "" "2017-09-02T01:47:33Z" "2017-09-02T01:47:33Z" "https://gist.github.com/2de5fad5de9633bbd293679bf128d764.git" "https://gist.github.com/2de5fad5de9633bbd293679bf128d764.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "07d152a9bab8dcb5a640a1bd7a4d35d7" "https://api.github.com/gists/07d152a9bab8dcb5a640a1bd7a4d35d7" "https://gist.github.com/07d152a9bab8dcb5a640a1bd7a4d35d7" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "gistfile1.txt" 2064 "https://gist.githubusercontent.com/bion/07d152a9bab8dcb5a640a1bd7a4d35d7/raw/220bbc11b1943fd1853f7394bec3ee83037b2295/gistfile1.txt" nil)) nil "" "2017-08-31T17:58:22Z" "2017-08-31T17:58:22Z" "https://gist.github.com/07d152a9bab8dcb5a640a1bd7a4d35d7.git" "https://gist.github.com/07d152a9bab8dcb5a640a1bd7a4d35d7.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "041e3f300de087f363eb9c0e39ce01fb" "https://api.github.com/gists/041e3f300de087f363eb9c0e39ce01fb" "https://gist.github.com/041e3f300de087f363eb9c0e39ce01fb" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "gistfile1.txt" 1778 "https://gist.githubusercontent.com/bion/041e3f300de087f363eb9c0e39ce01fb/raw/6e5e8ca2dd8ac7969808cc892a0c49df4c8c7a35/gistfile1.txt" nil)) nil "" "2017-08-29T18:29:46Z" "2017-08-29T18:29:47Z" "https://gist.github.com/041e3f300de087f363eb9c0e39ce01fb.git" "https://gist.github.com/041e3f300de087f363eb9c0e39ce01fb.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "01a356f10ab06e4bede43f735b204eb3" "https://api.github.com/gists/01a356f10ab06e4bede43f735b204eb3" "https://gist.github.com/01a356f10ab06e4bede43f735b204eb3" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "ls-large-files" 169 "https://gist.githubusercontent.com/bion/01a356f10ab06e4bede43f735b204eb3/raw/fadc41d8a2ef7c79ad967a84380584375b6d81a0/ls-large-files" nil)) t "ls-large-files" "2017-03-18T01:21:06Z" "2017-03-18T01:21:06Z" "https://gist.github.com/01a356f10ab06e4bede43f735b204eb3.git" "https://gist.github.com/01a356f10ab06e4bede43f735b204eb3.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "9cfc7c5b27ed2dd1adbdc41f6d25f3ec" "https://api.github.com/gists/9cfc7c5b27ed2dd1adbdc41f6d25f3ec" "https://gist.github.com/9cfc7c5b27ed2dd1adbdc41f6d25f3ec" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "id_rsa.pub" 403 "https://gist.githubusercontent.com/bion/9cfc7c5b27ed2dd1adbdc41f6d25f3ec/raw/320b616e491d1ff38edea7d641a90e7c6d9bae42/id_rsa.pub" nil)) t "atlas public key" "2017-01-02T03:30:50Z" "2017-01-02T03:31:06Z" "https://gist.github.com/9cfc7c5b27ed2dd1adbdc41f6d25f3ec.git" "https://gist.github.com/9cfc7c5b27ed2dd1adbdc41f6d25f3ec.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "a2f28e319e3c14c7b5894a326f18816b" "https://api.github.com/gists/a2f28e319e3c14c7b5894a326f18816b" "https://gist.github.com/a2f28e319e3c14c7b5894a326f18816b" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "sea-o-green.sh" 201 "https://gist.githubusercontent.com/bion/a2f28e319e3c14c7b5894a326f18816b/raw/0fe6907557af4ed82578e88a1d8efd3d4d129689/sea-o-green.sh" nil)) nil "lol commit history" "2016-12-30T21:38:25Z" "2016-12-31T06:56:26Z" "https://gist.github.com/a2f28e319e3c14c7b5894a326f18816b.git" "https://gist.github.com/a2f28e319e3c14c7b5894a326f18816b.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "9eac8a53490ebb46fdf77cb6b0f8f826" "https://api.github.com/gists/9eac8a53490ebb46fdf77cb6b0f8f826" "https://gist.github.com/9eac8a53490ebb46fdf77cb6b0f8f826" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "extract-snippet" 560 "https://gist.githubusercontent.com/bion/9eac8a53490ebb46fdf77cb6b0f8f826/raw/eae6fe5e94530af7698b9a8f2dcd8d80922df0bf/extract-snippet" nil) #s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "gif-encode" 353 "https://gist.githubusercontent.com/bion/9eac8a53490ebb46fdf77cb6b0f8f826/raw/1e01857a9b8b5389b3f6d84f4ca531b28505b3ee/gif-encode" nil)) t "animated gif CLI tools" "2016-12-13T01:17:42Z" "2016-12-13T01:17:42Z" "https://gist.github.com/9eac8a53490ebb46fdf77cb6b0f8f826.git" "https://gist.github.com/9eac8a53490ebb46fdf77cb6b0f8f826.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "015c7e2cc0de601b36c0bb2340b28648" "https://api.github.com/gists/015c7e2cc0de601b36c0bb2340b28648" "https://gist.github.com/015c7e2cc0de601b36c0bb2340b28648" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "synth_frontend.cljs" 4692 "https://gist.githubusercontent.com/bion/015c7e2cc0de601b36c0bb2340b28648/raw/f777651a97e2794ede4e29a67731b5c8ba6f1435/synth_frontend.cljs" nil)) t "synth-frontend" "2016-07-15T04:00:46Z" "2016-07-15T04:00:46Z" "https://gist.github.com/015c7e2cc0de601b36c0bb2340b28648.git" "https://gist.github.com/015c7e2cc0de601b36c0bb2340b28648.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "f638bd3825f955c3287a" "https://api.github.com/gists/f638bd3825f955c3287a" "https://gist.github.com/f638bd3825f955c3287a" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "example_score.clj" 974 "https://gist.githubusercontent.com/bion/f638bd3825f955c3287a/raw/6acb751ddde4218f2e7ba518e2d7364af4400e70/example_score.clj" nil)) t "" "2015-10-23T16:34:43Z" "2015-10-23T16:34:45Z" "https://gist.github.com/f638bd3825f955c3287a.git" "https://gist.github.com/f638bd3825f955c3287a.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "8e6bc08218c15e1ad854" "https://api.github.com/gists/8e6bc08218c15e1ad854" "https://gist.github.com/8e6bc08218c15e1ad854" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "freeze_emacs.clj" 402 "https://gist.githubusercontent.com/bion/8e6bc08218c15e1ad854/raw/5919cc91566be2fdfac787a38143e321825940a4/freeze_emacs.clj" nil)) t "" "2015-10-20T04:46:53Z" "2015-10-20T04:46:53Z" "https://gist.github.com/8e6bc08218c15e1ad854.git" "https://gist.github.com/8e6bc08218c15e1ad854.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "6fa6fd1123ff15332436" "https://api.github.com/gists/6fa6fd1123ff15332436" "https://gist.github.com/6fa6fd1123ff15332436" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "US Zip Codes from 2013 Government Data" 928044 "https://gist.githubusercontent.com/bion/6fa6fd1123ff15332436/raw/4c40947a623fb1e5042286dd8e6a68856342c181/US%20Zip%20Codes%20from%202013%20Government%20Data" nil)) t nil "2015-07-14T20:12:17Z" "2015-08-29T14:24:55Z" "https://gist.github.com/6fa6fd1123ff15332436.git" "https://gist.github.com/6fa6fd1123ff15332436.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "fb76a40ef75e7b38d864" "https://api.github.com/gists/fb76a40ef75e7b38d864" "https://gist.github.com/fb76a40ef75e7b38d864" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "rdp.cc" 3900 "https://gist.githubusercontent.com/bion/fb76a40ef75e7b38d864/raw/8b39291bf735e85f628802a97ba0d015a3073208/rdp.cc" nil)) nil "RDP" "2015-07-02T16:54:38Z" "2015-08-29T14:24:11Z" "https://gist.github.com/fb76a40ef75e7b38d864.git" "https://gist.github.com/fb76a40ef75e7b38d864.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "ea72dd30dc7a192ed6c8" "https://api.github.com/gists/ea72dd30dc7a192ed6c8" "https://gist.github.com/ea72dd30dc7a192ed6c8" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "iterators_in_template_fxns.cpp" 198 "https://gist.githubusercontent.com/bion/ea72dd30dc7a192ed6c8/raw/8187043d41a2972374a18dd21913e08dc5c5a179/iterators_in_template_fxns.cpp" nil)) t "" "2015-06-19T07:30:57Z" "2015-08-29T14:23:20Z" "https://gist.github.com/ea72dd30dc7a192ed6c8.git" "https://gist.github.com/ea72dd30dc7a192ed6c8.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "ba83cc69f7eecadaa16d" "https://api.github.com/gists/ba83cc69f7eecadaa16d" "https://gist.github.com/ba83cc69f7eecadaa16d" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "cartesian_product.cpp" 1419 "https://gist.githubusercontent.com/bion/ba83cc69f7eecadaa16d/raw/26c12c9598a9797314277318bbc43d8ed14040e5/cartesian_product.cpp" nil)) t "cartesian product c++" "2015-06-18T07:00:03Z" "2015-08-29T14:23:15Z" "https://gist.github.com/ba83cc69f7eecadaa16d.git" "https://gist.github.com/ba83cc69f7eecadaa16d.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "79bcfbfb07f2b179550a" "https://api.github.com/gists/79bcfbfb07f2b179550a" "https://gist.github.com/79bcfbfb07f2b179550a" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "soccer_league.rb" 1288 "https://gist.githubusercontent.com/bion/79bcfbfb07f2b179550a/raw/66c8c9e1a265f9210d88b45943c2d7597b3be4a8/soccer_league.rb" nil)) nil "soccer league" "2015-06-02T20:49:31Z" "2015-08-29T14:22:24Z" "https://gist.github.com/79bcfbfb07f2b179550a.git" "https://gist.github.com/79bcfbfb07f2b179550a.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "7a570e0d73efae206e7a" "https://api.github.com/gists/7a570e0d73efae206e7a" "https://gist.github.com/7a570e0d73efae206e7a" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "recur.js" 631 "https://gist.githubusercontent.com/bion/7a570e0d73efae206e7a/raw/6623b96fd9ddc1837fb7c03f009408822a351439/recur.js" nil)) nil "recur without mutating" "2015-05-31T19:14:37Z" "2015-08-29T14:22:18Z" "https://gist.github.com/7a570e0d73efae206e7a.git" "https://gist.github.com/7a570e0d73efae206e7a.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "ea7ff2df7f08f1f805b6" "https://api.github.com/gists/ea7ff2df7f08f1f805b6" "https://gist.github.com/ea7ff2df7f08f1f805b6" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "async_countdown.js" 347 "https://gist.githubusercontent.com/bion/ea7ff2df7f08f1f805b6/raw/b88cf9b8b7fd98acea5883279b6007fab8b90412/async_countdown.js" nil)) t "async-countdown" "2015-05-10T08:56:14Z" "2015-08-29T14:20:54Z" "https://gist.github.com/ea7ff2df7f08f1f805b6.git" "https://gist.github.com/ea7ff2df7f08f1f805b6.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "be58c2e9ba8283dc0206" "https://api.github.com/gists/be58c2e9ba8283dc0206" "https://gist.github.com/be58c2e9ba8283dc0206" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "sine_table.c" 540 "https://gist.githubusercontent.com/bion/be58c2e9ba8283dc0206/raw/2c36186e7ea2974af48965204b06919b71a9dcae/sine_table.c" nil)) t "Sine Table" "2015-04-26T19:52:13Z" "2015-08-29T14:20:00Z" "https://gist.github.com/be58c2e9ba8283dc0206.git" "https://gist.github.com/be58c2e9ba8283dc0206.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "4121b868973edd8104d5" "https://api.github.com/gists/4121b868973edd8104d5" "https://gist.github.com/4121b868973edd8104d5" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "scbeef" 816 "https://gist.githubusercontent.com/bion/4121b868973edd8104d5/raw/e5fb92a54acba432cdf157966b09ee47bcd79774/scbeef" nil)) t "scbeef" "2015-02-16T22:50:37Z" "2015-08-29T14:15:35Z" "https://gist.github.com/4121b868973edd8104d5.git" "https://gist.github.com/4121b868973edd8104d5.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "3aff32fc95095c480601" "https://api.github.com/gists/3aff32fc95095c480601" "https://gist.github.com/3aff32fc95095c480601" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "Makefile" 1292 "https://gist.githubusercontent.com/bion/3aff32fc95095c480601/raw/77b639384663c3fa9ce4991bb664aaa5b6553c0e/Makefile" nil)) t "Zed's Makefile" "2015-02-13T18:57:55Z" "2015-08-29T14:15:23Z" "https://gist.github.com/3aff32fc95095c480601.git" "https://gist.github.com/3aff32fc95095c480601.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "6abe02ceec9d99c85561" "https://api.github.com/gists/6abe02ceec9d99c85561" "https://gist.github.com/6abe02ceec9d99c85561" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "blocks_and_methods.rb" 196 "https://gist.githubusercontent.com/bion/6abe02ceec9d99c85561/raw/a478bad7cf259429928f601b1798b959f732910e/blocks_and_methods.rb" nil)) t "Ruby concepts 2" "2015-01-26T06:24:46Z" "2015-08-29T14:14:10Z" "https://gist.github.com/6abe02ceec9d99c85561.git" "https://gist.github.com/6abe02ceec9d99c85561.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "5b49e1b87c9f307c46b3" "https://api.github.com/gists/5b49e1b87c9f307c46b3" "https://gist.github.com/5b49e1b87c9f307c46b3" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "card_spiral.js" 1436 "https://gist.githubusercontent.com/bion/5b49e1b87c9f307c46b3/raw/dc4d723a98e365fad9df26d1fbfcb8412c66874e/card_spiral.js" nil)) nil "Bluescape browser client card spiral" "2015-01-19T21:14:21Z" "2015-08-29T14:13:46Z" "https://gist.github.com/5b49e1b87c9f307c46b3.git" "https://gist.github.com/5b49e1b87c9f307c46b3.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "f84464bfe2ad469186c1" "https://api.github.com/gists/f84464bfe2ad469186c1" "https://gist.github.com/f84464bfe2ad469186c1" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "latency.markdown" 1230 "https://gist.githubusercontent.com/bion/f84464bfe2ad469186c1/raw/6ec5b8ccad28031df641678e1587826c2dfe56f4/latency.markdown" nil) #s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "latency_humanized.markdown" 1286 "https://gist.githubusercontent.com/bion/f84464bfe2ad469186c1/raw/2b9272f9328ad57b2c7cb6873ec5cad5198fa09a/latency_humanized.markdown" nil)) t nil "2014-12-08T22:11:35Z" "2015-08-29T14:11:01Z" "https://gist.github.com/f84464bfe2ad469186c1.git" "https://gist.github.com/f84464bfe2ad469186c1.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "867827b51de139e0190b" "https://api.github.com/gists/867827b51de139e0190b" "https://gist.github.com/867827b51de139e0190b" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "port_to_command.sh" 173 "https://gist.githubusercontent.com/bion/867827b51de139e0190b/raw/f282994bbd23a20edc48917d0d200736b03d048d/port_to_command.sh" nil)) t "" "2014-11-14T22:44:26Z" "2015-08-29T14:09:32Z" "https://gist.github.com/867827b51de139e0190b.git" "https://gist.github.com/867827b51de139e0190b.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "2bb38a74fdefb61821d7" "https://api.github.com/gists/2bb38a74fdefb61821d7" "https://gist.github.com/2bb38a74fdefb61821d7" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "filter_to_latancy_entries" 151 "https://gist.githubusercontent.com/bion/2bb38a74fdefb61821d7/raw/67bf26659ad5787fce98df45be2dfc9854fe96c5/filter_to_latancy_entries" nil) #s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "latency_stats.rb" 1155 "https://gist.githubusercontent.com/bion/2bb38a74fdefb61821d7/raw/c0c13a5a61335f811b6af4a386dadd489243f2d8/latency_stats.rb" nil)) nil "Collab server log web client latency parsing" "2014-09-18T23:48:23Z" "2015-08-29T14:06:38Z" "https://gist.github.com/2bb38a74fdefb61821d7.git" "https://gist.github.com/2bb38a74fdefb61821d7.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil) #s(#s(eieio--class gh-gist-gist "Gist object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class gh-gist-gist-stub "Class for user-created gist objects" (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (files 0 public 1 description 2)) (gh-gist-gist) ((:files . files) (:public . public) (:description . description)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 nil unbound unbound) (:custom-groups nil :documentation "Class for user-created gist objects" :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor files nil list nil) #s(cl-slot-descriptor public unbound t nil) #s(cl-slot-descriptor description unbound t nil) #s(cl-slot-descriptor date unbound t nil) #s(cl-slot-descriptor update unbound t nil) #s(cl-slot-descriptor push-url unbound t nil) #s(cl-slot-descriptor pull-url unbound t nil) #s(cl-slot-descriptor comments unbound t nil) #s(cl-slot-descriptor user nil t nil) #s(cl-slot-descriptor history nil list nil) #s(cl-slot-descriptor forks nil list nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 files 3 public 4 description 5 date 6 update 7 push-url 8 pull-url 9 comments 10 user 11 history 12 forks 13)) nil ((:id . id) (:url . url) (:html-url . html-url) (:files . files) (:public . public) (:description . description) (:date . date) (:update . update) (:push-url . push-url) (:pull-url . pull-url) (:comments . comments) (:user . user) (:history . history) (:forks . forks)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#4 unbound unbound unbound nil unbound unbound unbound unbound unbound unbound unbound nil nil nil) (:custom-groups nil :documentation "Gist object" :marshal-default-spec gh-marshal-default-spec)) "589337697fcb02415e99" "https://api.github.com/gists/589337697fcb02415e99" "https://gist.github.com/589337697fcb02415e99" (#s(#s(eieio--class gh-gist-gist-file nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#10) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#8) (:custom-groups nil))) [#s(cl-slot-descriptor filename unbound t nil) #s(cl-slot-descriptor size unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor content unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (filename 0 size 1 url 2 content 3)) nil ((:filename . filename) (:size . size) (:url . url) (:content . content)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#6 unbound unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) "gistfile1.js" 2326 "https://gist.githubusercontent.com/bion/589337697fcb02415e99/raw/85ff2e9d0f1620ac797a1683704f60e93021ef6a/gistfile1.js" nil)) t "Javascript context bindng" "2014-08-24T04:02:11Z" "2015-08-29T14:05:38Z" "https://gist.github.com/589337697fcb02415e99.git" "https://gist.github.com/589337697fcb02415e99.git" 0 #s(#s(eieio--class gh-user "Github user object" (#s(eieio--class gh-ref-object nil (#s(eieio--class gh-object nil (#s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#11) (:custom-groups nil))) [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-repos-ref gh-repos-repo-stub gh-orgs-plan gh-oauth-app gh-issues-pull-request gh-gist-gist-file gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-ref-object) nil [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#9) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2)) (gh-repos-repo gh-pulls-request-stub gh-orgs-org-stub gh-oauth-authorization gh-issues-milestone gh-issues-label gh-issues-issue gh-gist-gist gh-gist-fork-entry gh-comment gh-user) ((:id . id) (:url . url) (:html-url . html-url)) [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7 unbound unbound unbound) (:custom-groups nil :marshal-default-spec gh-marshal-default-spec)) #s(eieio--class marshal-base nil nil [] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data ()) (gh-users-user gh-repos-ref gh-repos-repo gh-repos-repo-stub gh-pulls-request gh-pulls-request-stub gh-pulls-comment gh-orgs-org gh-orgs-plan gh-orgs-org-stub gh-oauth-app gh-oauth-authorization gh-issues-comment gh-issues-milestone gh-issues-label gh-issues-pull-request gh-issues-issue gh-gist-gist-file gh-gist-gist gh-gist-fork-entry gh-gist-history-entry gh-gist-history-change gh-gist-gist-stub gh-comment gh-user gh-ref-object gh-object) nil [#s(cl-slot-descriptor -type-info nil t ((:protection . protected))) #s(cl-slot-descriptor -marshal-info nil t ((:protection . protected)))] [nil nil] #s(#7) (:custom-groups nil))) [#s(cl-slot-descriptor id unbound t nil) #s(cl-slot-descriptor url unbound t nil) #s(cl-slot-descriptor html-url unbound t nil) #s(cl-slot-descriptor login unbound t nil) #s(cl-slot-descriptor gravatar-url unbound t nil)] #s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (id 0 url 1 html-url 2 login 3 gravatar-url 4)) (gh-users-user) ((:id . id) (:url . url) (:html-url . html-url) (:login . login) (:gravatar-url . gravatar-url)) [#s(cl-slot-descriptor -marshal-info nil t ((:protection . protected))) #s(cl-slot-descriptor -type-info nil t ((:protection . protected)))] [nil nil] #s(#5 unbound unbound unbound unbound unbound) (:custom-groups nil :documentation "Github user object" :marshal-default-spec gh-marshal-default-spec)) 473671 "https://api.github.com/users/bion" "https://github.com/bion" "bion" nil) nil nil)) nil "W/\"3a2a85d2277ea691e61708f0736a35af\"" nil)))
  :timestamp 1517860643.82489)
